version: 2

aliases:
  - &jfrog-login
    name: Rename jfrog environment variable for maven setting.xml
    command: |
      echo "export JFROG_USER=$ARTIFACTORY_USER"  >> $BASH_ENV
      echo "export JFROG_PASS=$ARTIFACTORY_PASSWORD"  >> $BASH_ENV
  - &sonar-scan
    name: Sonar scan
    command: |
      mvn -Psonar -s .circleci/settings.xml \
        sonar:sonar \
        -Dsonar.projectKey=entur_${CIRCLE_PROJECT_REPONAME} \
        -Dsonar.organization=${SONAR_ORG} \
        -Dsonar.projectName=${CIRCLE_PROJECT_REPONAME} \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.login=${ENTUR_SONAR_PASSWORD}
  - &release
    name: Release
    command: |
      echo "Start release"
      git config --global user.email "circleci@entur.no"
      git config --global user.name "circleci"
      git checkout master
      mvn gitflow:release-start gitflow:release-finish -DskipTests=true -pl gbfs-java-model -Prelease -DpostReleaseGoals=deploy -DargLine='-Prelease -pl gbfs-java-model -DskipTests -s .circleci/settings.xml' -B -s .circleci/settings.xml
  - &import_gpg_key
    name: Configure GPG private key for signing project artifacts in OSS Sonatype
    command: |
      echo $SONATYPE_GPG_KEY_BASE64 | base64 --decode | gpg --batch --no-tty --import --yes

jobs:
  build:
    docker:
      - image: cimg/openjdk:17.0.10
        auth:
          username: $DOCKERHUB_LOGIN
          password: $DOCKERHUB_PASSWORD
    environment:
      MAVEN_OPTS: -Xmx3G
    steps:
      - checkout
      - restore_cache:
          keys:
            - dep-cache-{{ checksum "pom.xml" }}
            # fallback to the most recent cache if there is no exact match for this pom.xml
            - dep-cache-
      - run:
          name: Download Maven settings
          command: wget https://raw.githubusercontent.com/entur/circleci-toolbox-image-java11/master/tools/m2/settings.xml -O .circleci/settings.xml
      - run: *jfrog-login
      - run:
          name: Refresh cache
          command: mvn org.apache.maven.plugins:maven-dependency-plugin:3.1.0:go-offline -s .circleci/settings.xml
      - save_cache:
          paths:
            - ~/.m2
          key: dep-cache-{{ checksum "pom.xml" }}
      # Cannot use -o because of snapshot dependencies.
      - run: mvn verify -s .circleci/settings.xml
      - run: *sonar-scan
      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
      - persist_to_workspace:
          root: ~/project
          paths:
            - target
            - gbfs-java-model/target
  deploy:
    docker:
      - image: cimg/openjdk:17.0.10
        auth:
          username: $DOCKERHUB_LOGIN
          password: $DOCKERHUB_PASSWORD
    environment:
      DEBIAN_FRONTEND: "noninteractive"
    steps:
      - run: git config --global user.email "circleci@entur.no"
      - run: git config --global user.name "circleci"
      - checkout
      - restore_cache:
          keys:
            - dep-cache-{{ checksum "pom.xml" }}
            # fallback to the most recent cache if there is no exact match for this pom.xml
            - dep-cache-
      - run:
          name: Download Maven settings
          command: wget https://raw.githubusercontent.com/entur/circleci-toolbox-image-java11/master/tools/m2/settings.xml -O .circleci/settings.xml
      - run: *jfrog-login
      - run:
          name: Refresh cache
          command: mvn org.apache.maven.plugins:maven-dependency-plugin:3.1.0:go-offline -s .circleci/settings.xml
      - run: mvn install -pl rule-factory -s .circleci/settings.xml && mvn package -s .circleci/settings.xml -Dmaven.test.skip=true -pl gbfs-java-model
      - persist_to_workspace:
          root: ~/project
          paths:
            - target
            - gbfs-java-model/target
      - run: *import_gpg_key
      - run: *release
      - save_cache:
          paths:
            - ~/.m2
          key: dep-cache-{{ checksum "pom.xml" }}
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build:
          context: global
      - deploy:
          context: global
          requires:
            - build
          filters:
            branches:
              only: master